plugins {
  id 'com.diffplug.spotless'
  id 'org.openapi.generator'
}


dependencies {
  implementation platform('org.springframework.boot:spring-boot-dependencies:3.2.1')

  implementation 'org.apache.tomcat.embed:tomcat-embed-core'
  implementation 'org.springframework:spring-webmvc'


  compileOnly 'org.springdoc:springdoc-openapi-ui:1.6.14'
  implementation 'org.openapitools:jackson-databind-nullable:0.2.6'
}

openApiGenerate {
  generatorName = 'spring'
  library = 'spring-boot'
  inputSpec = "$rootDir/src/main/resources/schema/petclinic.openapi.yaml".toString()
  outputDir = "$buildDir/generated".toString()
  apiPackage = 'org.springframework.samples.petclinic.web.api'
  invokerPackage = 'org.springframework.samples.petclinic.invoker'
  modelPackage = 'org.springframework.samples.petclinic.model'
  modelNameSuffix = 'Dto'
  ignoreFileOverride = "$projectDir/src/main/openapi-generator/.openapi-generator-ignore".toString()
  configOptions = [
    configPackage          : 'org.springframework.samples.petclinic.swagger',
    dateLibrary            : 'java8',
    java8                  : 'true',
    hideGenerationTimestamp: 'true',
    useTags                : 'true',
    useBeanValidation      : 'false',
    useSpringBoot3         : 'true',
    interfaceOnly          : 'true'
  ]
}

sourceSets {
  main {
    java.srcDirs += "$buildDir/generated/src/main/java"
  }
}

spotless {
  groovyGradle {
    //paddedCell() // Avoid cyclic ambiguities
    greclipse().configFile("$rootDir/config/eclipse-java-google-style.xml")
  }
}

afterEvaluate {
  compileJava.dependsOn(tasks.openApiGenerate)
}
